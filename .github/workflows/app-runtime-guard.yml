name: app-runtime-guard

on:
  pull_request:
    branches: [main]

jobs:
  check-allowed-paths:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (full history for proper diff)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Bypass guard if labeled
        if: contains(join(github.event.pull_request.labels.*.name, ','), 'guard:bypass')
        shell: bash
        run: |
          echo "Guard bypassed via label 'guard:bypass'"

      - name: List changed files
        id: diff
        shell: bash
        run: |
          BASE_SHA="${{ github.event.pull_request.base.sha }}"
          HEAD_SHA="${{ github.event.pull_request.head.sha }}"
          git diff --name-only "$BASE_SHA" "$HEAD_SHA" > changed.txt
          echo "changed<<EOF" >> $GITHUB_OUTPUT
          cat changed.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          echo "Changed files:"
          cat changed.txt || true

      - name: Enforce allowlist (fail if any file is outside runtime)
        if: ${{ !contains(join(github.event.pull_request.labels.*.name, ','), 'guard:bypass') }}
        shell: bash
        run: |
          # Load allowlist patterns from central config
          if [[ ! -f .github/runtime-allowlist.txt ]]; then
            echo "::error::.github/runtime-allowlist.txt not found"
            exit 1
          fi
          mapfile -t ALLOW < <(sed -e 's/#.*$//' -e '/^\s*$/d' .github/runtime-allowlist.txt)
          ALLOW_RE="$(IFS='|'; echo "${ALLOW[*]}")"

          BAD=0
          echo "Scanning for forbidden paths..."
          while IFS= read -r f; do
            [[ -z "$f" ]] && continue
            if [[ "$f" =~ (^|/)node_modules(/|$) ]]; then
              continue
            fi
            if echo "$f" | egrep -q "$ALLOW_RE"; then
              echo "✓ allowed: $f"
            else
              echo "✗ forbidden: $f"
              BAD=1
            fi
          done < changed.txt

          if [[ $BAD -ne 0 ]]; then
            echo "::error::This PR touches files outside the app runtime allowlist."
            exit 1
          fi

      - name: pnpm version (informational)
        shell: bash
        run: |
          corepack enable
          corepack prepare pnpm@9.12.0 --activate
          pnpm -v
